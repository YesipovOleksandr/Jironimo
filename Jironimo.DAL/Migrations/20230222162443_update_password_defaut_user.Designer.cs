// <auto-generated />
using System;
using Jironimo.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jironimo.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230222162443_update_password_defaut_user")]
    partial class update_password_defaut_user
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Jironimo.DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AppStoreLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GooglePlayLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Outsource")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.ApplicationDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePathTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionImage")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationDetails");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.ApplicationDeveloper", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "DeveloperId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("ApplicationDeveloper");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a02dcaba-77e1-4ecd-b209-3386c327c0bd"),
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("10baee63-b751-4e4c-b218-c9d6d9df0432"),
                            Name = "Web"
                        });
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d822c802-881b-47e3-8f73-5d8014d3ebe5"),
                            Login = "admin",
                            Password = "heG64OaMXpPxQyzXzwlbOlQHUSEmkz+/n70ZgSRCOolEF8OMg7zrgF8T5SjT/836"
                        });
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Application", b =>
                {
                    b.HasOne("Jironimo.DAL.Entities.Category", "Category")
                        .WithMany("Applications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.ApplicationDetails", b =>
                {
                    b.HasOne("Jironimo.DAL.Entities.Application", "Application")
                        .WithMany("ApplicationDetails")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.ApplicationDeveloper", b =>
                {
                    b.HasOne("Jironimo.DAL.Entities.Application", "Application")
                        .WithMany("ApplicationDeveloper")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jironimo.DAL.Entities.Developer", "Developer")
                        .WithMany("ApplicationDeveloper")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Application", b =>
                {
                    b.Navigation("ApplicationDetails");

                    b.Navigation("ApplicationDeveloper");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Category", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Jironimo.DAL.Entities.Developer", b =>
                {
                    b.Navigation("ApplicationDeveloper");
                });
#pragma warning restore 612, 618
        }
    }
}
